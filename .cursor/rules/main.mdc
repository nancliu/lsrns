---
alwaysApply: true
---
# OD生成脚本项目 - 主规则文件

## 规则概览

本项目包含两个核心规则文件：

1. **项目架构规范** (`project-architecture.mdc`) - 整体架构和开发规范
2. **代码简化规范** (`code-simplicity.mdc`) - 保持代码简洁的原则

## 调用规则

### 何时使用项目架构规范
- 需要了解项目整体架构时
- 设计新的模块或功能时
- 重构现有代码结构时
- 制定开发规范时
- 新团队成员入职时

### 何时使用代码简化规范
- 编写新代码时，确保代码简洁易懂
- 重构复杂代码时，简化逻辑结构
- 代码审查时，检查代码复杂度
- 设计新功能时，避免过度设计
- 遇到复杂逻辑时，寻找简化方案

## 规则优先级

### 1. 架构优先
- 首先确保遵循项目架构规范
- 保持模块职责清晰
- 维护正确的依赖关系

### 2. 简化原则
- 在满足架构要求的前提下，优先选择简单的实现
- 避免过度设计
- 保持代码可读性

## 快速参考

### 架构检查清单
- [ ] 新功能是否放在正确的层级？
- [ ] 模块职责是否单一？
- [ ] 依赖关系是否正确？
- [ ] 是否遵循命名规范？

### 简化检查清单
- [ ] 方法是否超过30行？
- [ ] 嵌套是否超过3层？
- [ ] 参数是否超过5个？
- [ ] 类方法是否超过10个？

## 使用建议

1. **开发前**: 先查看项目架构规范，了解整体结构
2. **编码时**: 参考代码简化规范，保持代码简洁
3. **审查时**: 同时使用两个规则进行检查
4. **重构时**: 先确保架构正确，再考虑简化

## 规则更新

- 规则文件位于 `.cursor/rules/` 目录
- 可根据项目发展需要更新规则内容
- 建议定期回顾和优化规则
description:
globs:
alwaysApply: false
---
